apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'walle'

// 加载配置文件
final Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)

// 基本配置信息，签名请替换您自己的签名文件，建议在local.properties里面配置。
def signKeyStorePassword = properties.getProperty("keystore.keyPassword", "cnblogs")
def signStorePassword = properties.getProperty("keystore.storePassword", "cnblogs")
def signStoreFile = properties.getProperty("keystore.file", "debug.keystore")
def umengAppKey = properties.getProperty("umengAppKey", "replace_your_umeng_key")
def buglyAppId = properties.getProperty("buglyAppId", "replace_your_bugly_appid")
def leancloudAppId = properties.getProperty("leancloudAppId", "replace_your_leancloud_appid")
def leancloudAppKey = properties.getProperty("leancloudAppKey", "replace_your_leancloud_appeky")

def wechatAppId = properties.getProperty("wechatAppId", "replace_your_wechatAppId")
def wechatAppSecret = properties.getProperty("wechatAppSecret", "replace_wechatAppSecret")
def weiboAppId = properties.getProperty("weiboAppId", "replace_your_weboAppId")
def weiboAppSecret = properties.getProperty("weiboAppSecret", "replace_your_weiboAppSecret")
def qqAppId = properties.getProperty("qqAppId", "replace_your_qqAppId")
def qqAppSecret = properties.getProperty("qqAppSecret", "replace_your_qqAppSecret")


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

//    dexOptions {
//        javaMaxHeapSize '2g'
//    }

    signingConfigs {
        release {
            keyAlias 'com.rae.cnblogs'
            storeFile file(signStoreFile)
            keyPassword signKeyStorePassword
            storePassword signStorePassword
        }
    }

    defaultConfig {
        applicationId "com.rae.cnblogs"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 8
        versionName "1.1.5"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'BUGLY_APP_ID', '"' + buglyAppId + '"'
        buildConfigField 'String', 'LEAN_CLOUD_APP_ID', '"' + leancloudAppId + '"'
        buildConfigField 'String', 'LEAN_CLOUD_APP_KEY', '"' + leancloudAppKey + '"'

        // 微信APP ID
        buildConfigField 'String', 'WECHAT_APP_ID', '"' + wechatAppId + '"'
        buildConfigField 'String', 'WECHAT_APP_SECRET', '"' + wechatAppSecret + '"'
        buildConfigField 'String', 'WEIBO_APP_ID', '"' + weiboAppId + '"'
        buildConfigField 'String', 'WEIBO_APP_SECRET', '"' + weiboAppSecret + '"'
        buildConfigField 'String', 'QQ_APP_ID', '"' + qqAppId + '"'
        buildConfigField 'String', 'QQ_APP_SECRET', '"' + qqAppSecret + '"'
        buildConfigField 'String', 'UMENG_APPKEY', '"' + umengAppKey + '"'

        ndk {
            // fix bug #504 64位系统webView问题
            abiFilters "armeabi"
            abiFilters "x86"
            abiFilters "armeabi-v7a"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        xiaomi {
            initWith release
            tasks.whenTaskAdded { task ->
                if (task.name.contains('assembleXiaomiChannels')) {
                    task.doFirst {
                        printf('渠道包任务：%s\n', task.name)
                        walle.channelFile = new File("${project.getProjectDir()}/xiaomiChannel")
                    }
                }
            }
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${buildType}-v${versionName}-${channel}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
//    configFile = new File("${project.getProjectDir()}/config.json")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:multidex:1.0.2'

    implementation project(':sdk')

    annotationProcessor rootProject.ext.butterknifeCompiler
    implementation rootProject.ext.appcompat
    implementation rootProject.ext.design
    implementation rootProject.ext.cardview
    implementation rootProject.ext.butterknife
    implementation rootProject.ext.rxjava

    implementation 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'
    implementation 'com.github.raee:XRecyclerView:1.3.3'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    implementation 'com.umeng.sdk:common:1.4.1'
    implementation 'com.umeng.sdk:analytics:7.4.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'me.imid.swipebacklayout.lib:library:1.1.0'
    implementation 'com.github.chrisbanes:PhotoView:2.1.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

    implementation 'eu.davidea:flexible-adapter:5.0.0-rc2'
    // LeanCloud 基础包
    implementation 'cn.leancloud.android:avoscloud-sdk:v4.4.3'
    // LeanCloud 用户反馈包
    implementation 'cn.leancloud.android:avoscloud-feedback:v4.4.3@aar'
    // 主题切换
    implementation 'skin.support:skin-support:2.1.2'
    implementation 'skin.support:skin-support-design:1.2.5'
    implementation 'com.kyleduo.switchbutton:library:1.4.6'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.meituan.android.walle:library:1.1.6'
    implementation 'jp.wasabeef:glide-transformations:3.0.1'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
}

// 热更新
if (enableHotfix.toBoolean()) {
    apply from: 'tinker-support.gradle'
}
